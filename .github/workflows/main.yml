name: CI devops 2025

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build and test with Maven
        working-directory: simple-api
        run: mvn clean verify
      
      - name: SonarCloud Analysis
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=Elishama07_tp-devops-correction-docker -Dsonar.organization=elishama07-sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}  --file ./simple-api/pom.xml


  build-and-push-docker-image:
    needs: test-backend
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: simple-api
          push: ${{ github.ref == 'refs/heads/main' }}  
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest

      - name: Build and push databases
        uses: docker/build-push-action@v6
        with:
          context: database
          push: ${{ github.ref == 'refs/heads/main' }}  
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest

      - name: Build and push httpd
        uses: docker/build-push-action@v6
        with:
          context: http-server
          push: ${{ github.ref == 'refs/heads/main' }}  
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest

  deploy-infra:
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Deploy with Ansible
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
        run: |
          cd ../ansible
          echo "${{ secrets.DEPLOY_KEY }}" > ./id_rsa
          chmod 600 ./id_rsa

          echo "${{ secrets.VAULT_PASS }}" > vault_pass.txt
          ansible-playbook -i inventories/setup.yml playbook.yml --vault-password-file vault_pass.txt --private-key ./id_rsa
          rm vault_pass.txt id_rsa

  